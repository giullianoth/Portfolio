// THEME
@mixin theme() {
    .th- {
        @content;
    }
}

// CONTAINER
@mixin containerFluid($fillScreen: false) {
    width: 100%;

    @if $fillScreen == true {
        height: 100%;
    }
}

@mixin container($maxWidth: $container-width, $padding: $side-clearance) {
    max-width: $maxWidth;
    padding-inline: $padding;
    margin-inline: auto;
}

@mixin containerClearance($spacing: $section-clearance) {
    padding-block: $spacing;

    @include setResponsiveDesign($breakpoint-small) {
        padding-block: calc($spacing - 20px);
    }
}

// ATTRIBUTES WITH BROWSER PREFIXES
@mixin setBrowserPrefix($attr, $value, $prefixes: $browser-prefixes-default) {
    #{$attr}: #{$value};

    @each $prefix in $prefixes {
        -#{$prefix}-#{$attr}: #{$value};
    }
}

// BORDER RADIUS
@mixin borderRadius($radius) {
    @include setBrowserCore(border-radius, $radius);
}

@mixin rounded() {
    @include borderRadius(50%);
}

// FLEXBOX
@mixin flex($justifyContent: center, $alignItems: center, $flexWrap: wrap) {
    display: flex;
    justify-content: $justifyContent;
    align-items: $alignItems;
    flex-wrap: $flexWrap;
}

@mixin flexBasis($basis, $gap: 0) {
    @if $gap !=0 {
        flex-basis: calc($basis - $gap);
        flex-grow: 1;
    }

    @else {
        flex-basis: $basis;
    }
}

@mixin flex1($gap: 0) {
    @include flexBasis(100%, $gap);
}

@mixin flex2($gap: 0) {
    @include flexBasis(calc(100% / 2), $gap);
}

@mixin flex3($gap: 0) {
    @include flexBasis(calc(100% / 3), $gap);
}

@mixin flex4($gap: 0) {
    @include flexBasis(calc(100% / 4), $gap);
}

// POSITION
// Relative
@mixin relative() {
    position: relative;
}

// Absolute
@mixin absolute($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;
}

@mixin absoluteFull($top: 0, $left: 0, $fillScreen: false) {
    @include absolute($top, $left);
    @include containerFluid($fillScreen);
}

// Fixed
@mixin fixed($top: 0, $left: 0) {
    position: fixed;
    top: $top;
    left: $left;
}

@mixin fixedFull($top: 0, $left: 0, $fillScreen: false) {
    @include fixed($top, $left);
    @include containerFluid($fillScreen);
}

// Z-index
@mixin indexLevel3() {
    z-index: 110;
}

@mixin indexLevel2() {
    z-index: 100;
}

@mixin indexBase() {
    z-index: 0;
}

@mixin indexOverBase() {
    z-index: 1;
}

// BACKGROUND IMAGE
@mixin backgroundImage($image: "", $repeat: no-repeat, $size: cover, $position: center center) {
    @if $image != "" {
        background-image: url("#{$image-path}/#{$image}");
    }

    background-repeat: $repeat;
    background-size: $size;
    background-position: $position;
}

// TRANSITIONS AND ANIMATIONS
@mixin transition($property: all, $duration: $transition-duration-default, $timingFunction: ease, $delay: 0s) {
    transition: $property $duration $timingFunction $delay;
}

// RESPONSIVE DESIGN
@mixin setResponsiveDesign($screenWidth, $isMaxWidth: false) {    

    @if $isMaxWidth == true {
        @media screen and (max-width: $screenWidth) {
            @content;
        }
    }

    @else {
        @media screen and (min-width: $screenWidth) {
            @content;
        }
    }
}